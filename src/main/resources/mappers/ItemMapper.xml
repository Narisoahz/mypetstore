<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.csu.mypetstore.persistence.ItemMapper">
    <cache/>

    <select id="getItemListByProduct" parameterType="string" resultType="Item">
        SELECT
            I.ITEMID,
            LISTPRICE,
            UNITCOST,
            SUPPLIER AS supplierId,
            I.PRODUCTID AS "product.productId",
            NAME AS "product.name",
            DESCN AS "product.description",
            CATEGORY AS "product.categoryId",
            STATUS,
            ATTR1 AS attribute1,
            ATTR2 AS attribute2,
            ATTR3 AS attribute3,
            ATTR4 AS attribute4,
            ATTR5 AS attribute5
        FROM ITEM I, PRODUCT P
        WHERE P.PRODUCTID = I.PRODUCTID
        AND I.PRODUCTID = #{value}
        AND I.ONSALE=1
    </select>

    <select id="getItem" parameterType="string" resultType="Item">
        SELECT
            I.ITEMID,
            LISTPRICE,
            UNITCOST,
            SUPPLIER AS supplierId,
            I.PRODUCTID AS "product.productId",
            NAME AS "product.name",
            DESCN AS "product.description",
            CATEGORY AS "product.categoryId",
            STATUS,
            ATTR1 AS attribute1,
            ATTR2 AS attribute2,
            ATTR3 AS attribute3,
            ATTR4 AS attribute4,
            ATTR5 AS attribute5,
            QTY AS quantity
        FROM ITEM I, INVENTORY V, PRODUCT P
        WHERE P.PRODUCTID = I.PRODUCTID
        AND I.ITEMID = V.ITEMID
        AND I.ITEMID = #{value}
        AND I.ONSALE=1
    </select>
    <select id="getItem1" parameterType="string" resultType="Item">
        SELECT
            ITEMID,
            LISTPRICE,
            UNITCOST,
            PRODUCTID AS productId,
            ATTR1 AS attribute1
        FROM ITEM
        WHERE ITEMID = #{value}
    </select>
<select id="searchItemList" parameterType="string" resultType="Item">
 SELECT
            I.ITEMID,
            I.LISTPRICE,
            I.UNITCOST,
            I.SUPPLIER AS supplierId,
            I.PRODUCTID AS "product.productId",
            P.NAME AS "product.name",
            P.DESCN AS "product.description",
            P.CATEGORY AS "product.categoryId",
            I.STATUS,
            ATTR1 AS attribute1,
            ATTR2 AS attribute2,
            ATTR3 AS attribute3,
            ATTR4 AS attribute4,
            ATTR5 AS attribute5,
            QTY AS quantity
        FROM ITEM I, INVENTORY V, PRODUCT P
        WHERE P.PRODUCTID = I.PRODUCTID
        AND I.ITEMID = V.ITEMID
        AND lower(i.itemid) like #{value}
        AND I.ONSALE=1
</select>
    <select id="getInventoryQuantity" parameterType="string" resultType="int">
        SELECT QTY AS value
        FROM INVENTORY
        WHERE ITEMID = #{itemId}
    </select>

    <update id="updateInventoryQuantity" parameterType="map">
        UPDATE INVENTORY SET
            QTY = QTY - #{increment}
        WHERE ITEMID = #{itemId}
    </update>

    <insert id="insertItem" parameterType="Item">
    INSERT INTO item
            (ITEMID,PRODUCTID,LISTPRICE,UNITCOST,SUPPLIER,STATUS,ATTR1,ONSALE)
        VALUES(
            #{itemId},#{productId},#{listPrice},#{unitCost},#{supplierId},#{status},#{attribute1},#{onSale})
</insert>
    <insert id="insertInventory" parameterType="Item">
    INSERT INTO INVENTORY
            (ITEMID,QTY)
        VALUES(
            #{itemId},#{quantity})
</insert>
    <select id="getAllItem" resultType="Item">
        SELECT
            i.itemId,
            productid as productId,
            listprice as listPrice,
            v.qty as quantity,
            onSale as onSale
        FROM item i,inventory v
        where I.ITEMID = V.ITEMID
    </select>
    <update id="updateItem" parameterType="Item">
        UPDATE ITEM SET
            PRODUCTID =#{productId},
            LISTPRICE=#{listPrice},
            UNITCOST=#{unitCost},
            ATTR1=#{attribute1}
        WHERE ITEMID = #{itemId}
    </update>
    <update id="onSaleItem" parameterType="string">
        UPDATE ITEM SET
        ONSALE=1
        WHERE ITEMID=#{itemId}
    </update>
    <update id="outSaleItem" parameterType="string">
UPDATE ITEM SET
        ONSALE=0
        WHERE ITEMID=#{itemId}
    </update>
    <update id="updateQty">
        update INVENTORY SET
        QTY=#{quantity}
        where ITEMID=#{itemId}
    </update>
</mapper>